/*
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        https://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
*/

syntax = "proto3";
import "google/protobuf/any.proto";
import "SerializableDataType.proto";
package NES;

option java_package = "stream.nebula.protobuf";
option java_multiple_files = true;

/*
The serializable wrapper definition for fields
 */
message SerializableField{
  string name = 1;
  SerializableDataType type = 2;
}

/**
The serializable wrapper definition for expression nodes
 */
message SerializableExpression {
  message ConstantValueExpression{
    SerializableDataValue value = 1;
  }
  message FieldAccessExpression{
    string fieldName = 1;
    SerializableDataType type = 2;
  }
  message FunctionExpression{
    string functionName = 1;
    repeated SerializableExpression arguments = 2;
  }
  message FieldRenameExpression{
    string newFieldName = 1;
    SerializableExpression originalFieldAccessExpression = 2;
  }
  message FieldAssignmentExpression{
    FieldAccessExpression field = 1;
    SerializableExpression assignment = 2;
  }
  message WhenExpression{
    SerializableExpression left = 1;
    SerializableExpression right = 2;
  }
  message CaseExpression{
    repeated SerializableExpression left = 1;
    SerializableExpression right = 2;
  }
  message AndExpression{
    SerializableExpression left = 1;
    SerializableExpression right = 2;
  }
  message EqualsExpression{
    SerializableExpression left = 1;
    SerializableExpression right = 2;
  }
  message GreaterEqualsExpression{
    SerializableExpression left = 1;
    SerializableExpression right = 2;
  }
  message GreaterExpression{
    SerializableExpression left = 1;
    SerializableExpression right = 2;
  }
  message LessEqualsExpression{
    SerializableExpression left = 1;
    SerializableExpression right = 2;
  }
  message LessExpression{
    SerializableExpression left = 1;
    SerializableExpression right = 2;
  }
  message NegateExpression{
    SerializableExpression child = 1;
  }
  message OrExpression{
    SerializableExpression left = 1;
    SerializableExpression right = 2;
  }
  message AbsExpression{
    SerializableExpression child = 1;
  }
  message AddExpression{
    SerializableExpression left = 1;
    SerializableExpression right = 2;
  }
  message CeilExpression{
    SerializableExpression child = 1;
  }
  message DivExpression{
    SerializableExpression left = 1;
    SerializableExpression right = 2;
  }
  message ExpExpression{
    SerializableExpression child = 1;
  }
  message FloorExpression{
    SerializableExpression child = 1;
  }
  message ModExpression{
    SerializableExpression left = 1;
    SerializableExpression right = 2;
  }
  message MulExpression{
    SerializableExpression left = 1;
    SerializableExpression right = 2;
  }
  message PowExpression{
    SerializableExpression left = 1;
    SerializableExpression right = 2;
  }
  message RoundExpression{
    SerializableExpression child = 1;
  }
  message SqrtExpression{
    SerializableExpression child = 1;
  }
  message SubExpression{
    SerializableExpression left = 1;
    SerializableExpression right = 2;
  }
  message UdfCallExpression{
    ConstantValueExpression udfName = 1;
    repeated SerializableExpression functionArguments = 2;
  }

  SerializableDataType stamp = 1;
  google.protobuf.Any details = 2;
  repeated SerializableExpression children = 3;

}

