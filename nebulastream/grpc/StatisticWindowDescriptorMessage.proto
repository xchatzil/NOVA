/*
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        https://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
*/

syntax = "proto3";
import "google/protobuf/any.proto";
import "SerializableExpression.proto";
package NES;

option java_package = "stream.nebula.protobuf";
option java_multiple_files = true;

message SendingPolicyMessage {
  enum StatisticDataCodec {
    // Has to be exactly the same as the cpp version, as we merely do a cast from the enum to the int during serialization
    DEFAULT = 0;
    RUN_LENGTH_ENCODED = 1;
  }
  message SendingPolicyASAP {}
  message SendingPolicyAdaptive {}
  message SendingPolicyLazy {}

  google.protobuf.Any details = 1;
  StatisticDataCodec codec = 2;
}

message TriggerConditionMessage {
  /* For now, we do not have any members for the NeverTrigger, but we might have to add some variable here.
     Thus, we already create the infrastructure for the TriggerCondition
  */
  message NeverTrigger {}
  message ThresholdTrigger {
    double threshold = 1;
  }

  google.protobuf.Any details = 1;
}

message StatisticWindowDescriptorMessage {
  message CountMinDetails {
    uint64 depth = 1;
  }

  message HyperLogLogDetails {}

  google.protobuf.Any details = 1;
  SerializableExpression field = 2;
  uint64 width = 5;
}

