# ANTLR for NES Declarative Languages

## General:
/gen folders contain classes generated by ANTLR. Thus, please do not modify these files as it causes additional maintenance overhead when updating the grammar.

## Generation of ANTLR classes
To regenerate the ANTLR classes, e.g., upon modifying the ANTLR grammar, you can either use the plugin
provided by CLion (use .g4 file, right-click, select 'Generate Antlr Recognizer') or
follow the instructions given here: "https://tomassetti.me/getting-started-antlr-cpp/"
(java -jar antlr-4.9.2-complete.jar -package NES::Parsers -Dlanguage=Cpp IoTDB/nes-core/src/Parsers/NebulaSQL/gen/NebulaSQL.g4)
(java -jar antlr-4.9.2-complete.jar -package NES::Parsers -Dlanguage=Cpp IoTDB/nes-core/src/Parsers/NebulaPSL/gen/NesCEP.g4)

(The plugin currently does not work as vcpkg only provides version 4.9.3, plugin is on 4.10)

The current state does not require the generation of an ANTLR visitor of NES, so please remove it from ANTLR configurations for generation.

ANTLR automatically puts both the header and source files in the same folder, and therefore, it is
needed to move the header files to the respective /gen file in include manually.

### Further hints:
Some of the functions inside the generated files contain the argument "_localctx" but never used it.
This unused argument creates errors upon execution while using CLion.

Further, you need to manually adjust the includes in the cpp due to moving the h files:

from #include "NebulaSQLListener.h"
to : #include <Parsers/NebulaSQL/gen/NebulaSQLListener.h>

