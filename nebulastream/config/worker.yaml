# ~~~ Configurations for the NES Worker ~~~

# ~~ IPs and Ports ~~
# Set worker IP or host
#localWorkerHost: 127.0.0.1

# Set IP address of NES Coordinator to which the NES Worker should connect
#coordinatorHost: 127.0.0.1

# Set RPC Server port of NES Coordinator to which the NES Worker should connect
# Needs to be the same as rpcPort in Coordinator
#coordinatorPort: 4000

# Set RPC server port of NES Worker
#rpcPort: 3000

# Set the data port of the NES Worker
#dataPort: 3001

# Set number of computing slots in NES Worker
#numberOfSlots: 65535

# Set the number of worker threads
#numWorkerThreads: 1

# Number buffers in global buffer pool
#numberOfBuffersInGlobalBufferManager: 1024

# Number buffers in task local buffer pool
#numberOfBuffersPerWorker: 128

# Number buffers in source local buffer pool
#numberOfBuffersInSourceLocalBufferPool: 64

# Size of buffer to pass data through the system
#bufferSizeInBytes: 4096

# Set parentId of NES Worker node
#parentId: -1

# The log level (LOG_NONE, LOG_WARNING, LOG_DEBUG, LOG_INFO, LOG_TRACE)
#logLevel: LOG_DEBUG

# Comma separated list of where to map the sources
#sourcePinList:

# Comma separated list of where to map the worker
#workerPinList:

# Enable Numa-Aware execution
#numaAwareness: false

# Enable monitoring
#enableMonitoring: false

# Set the number of buffers per epoch
#numberOfBuffersPerEpoch: 100

# Set the network channel's max number of in-flight buffers before blocking
#networkSenderHighWatermark: 8

#queryCompiler:
  # Indicates the optimization strategy for the query compiler [FAST|DEBUG|OPTIMIZE]
  #queryCompilerCompilationStrategy: OPTIMIZE

  # Indicates the pipelining strategy for the query compiler [OPERATOR_FUSION|OPERATOR_AT_A_TIME]
  #queryCompilerPipeliningStrategy: OPERATOR_FUSION

  # Indicates the OutputBufferAllocationStrategy [ALL|NO|ONLY_INPLACE_OPERATIONS_NO_FALLBACK,
  # |REUSE_INPUT_BUFFER_AND_OMIT_OVERFLOW_CHECK_NO_FALLBACK,|REUSE_INPUT_BUFFER_NO_FALLBACK|OMIT_OVERFLOW_CHECK_NO_FALLBACK]
  #queryCompilerOutputBufferOptimizationLevel: ALL

# set the location of a node if it is a field node (format: "<lat>, <lng>")
# standard location settings will result in an invalid location and create a node without a location
#fieldNodeLocationCoordinates: 12.0, 53.0

# ~~~ Physical Stream Configurations ~~~

# A Physical Stream may be associated with multiple Instances of a logicalStreamName, a physicalStreamName and a SourceType
# If no Physical Stream Config is given, the worker will be created without a physical stream
# Available source Types: DefaultSource, CSVSource, MQTTSource, SenseSource, OPCSource (ToDo: Make source available),
#                         ZMQSource (ToDo: Make source available), KafkaSource (ToDo: Make source available),
#                         BinarySource (ToDo: Make source available))
#physicalSources:
  # Set logical stream name where this stream is added to
  #- logicalSourceName: default_source_log
    # Set physical stream name
    #physicalSourceName: default_source_phy
    # Define source type, also need to specify source configurations for source type below
    #type: CSV
    # CSVSource and its needed configuration params
    #configuration:
      ###### Define only the following configurations for CSV stream
      # Set file path
      #filePath:
      # Skip first line of the file
      #skipHeader: false
      # Set delimiter, e.g. ',' or '.'
      #delimiter: ","
      # Set number of buffers to produce, i.e. how often the read csv file is repeated
      #numberOfBuffersToProduce: 1
      # Set number of tuples to produce per buffer
      #numberOfTuplesToProducePerBuffer: 1
      # Set sampling interval of source
      #sourceGatheringInterval: 1
      # Set gathering mode between [interval|ingestion|adaptive]
      #sourceGatheringMode: interval
      # Set input data format
      #inputFormat: JSON

      ###### Define only the following configurations for DefaultSource stream
      # Set number of buffers to produce, i.e. how often the default data is repeated for this source
      #numberOfBuffersToProduce: 1
      ###### Define only the following configurations for BinarySource stream
      # Set number of buffers to produce, i.e. how often the default data is repeated for this source
      #filePath: 1
      ###### Define only the following configurations for SenseSource stream
      # Set number of buffers to produce, i.e. how often the default data is repeated for this source
      #udfs: 1
      ###### Define only the following configurations for MQTTSource stream
      # Set url to connect to
      #url:
      # Set clientId
      #clientId:
      # Set userName
      #userName:
      # Set topic to listen to
      #topic:
      # set quality of service
      #qos: 2
      # set cleanSession true = clean up session after client loses connection, false = keep data for client after connection loss (persistent session)
      #cleanSession: true
      # set tupleBuffer flush interval in milliseconds
      #flushIntervalMS: -1
      # Set input data format
      #inputFormat: JSON
      ###### Define only the following configurations for KafkaSource stream
      # Set kafka broker string
      #brokers:
      # Set auto commit, boolean value where 1 equals true, and 0 equals false
      #autoCommit: 1
      # Set groupId
      #groupId:
      # Set topic to listen to
      #topic: "test"
      # Set connection time out for source
      #connectionTimeout: 10
      ###### Define only the following configurations for OPCSource stream
      # Set namespaceIndex for node, needed for: OPCSource
      #namespaceIndex:
      # Set node identifier, needed for: OPCSource
      #nodeIdentifier:
      # Set userName, needed for: OPCSource (can be chosen arbitrary), OPCSource
      #userName:
      # Set password, needed for: OPCSource
      #password:

      ###### Define only the following configurations for TCP stream
      # socketHost:  Set the host to connect to  (e.g. localhost)
      # socketPort:  Set the port to connect to
      # socketDomain:  Set the domain of the socket (e.g. AF_INET)
      # socketType:  Set the type of the socket (e.g. SOCK_STREAM)
      # flushIntervalMS:  Set the flushIntervalMS of the socket, if set to zero the buffer will only be flushed once full
      # inputFormat:  Set the input format of the socket (e.g. JSON, CSV)
      # decideMessageSize:  Set the strategy for deciding the message size (e.g. TUPLE_SEPARATOR, USER_SPECIFIED_BUFFER_SIZE, BUFFER_SIZE_FROM_SOCKET)
      # tupleSeparator:  if tuple separator is used, set the tuple separator (e.g "\n")
      # socketBufferSize:  if user specified buffer size is used, set the buffer size
      # bytesUsedForSocketBufferSizeTransfer:  if user specified buffer size is used, set the buffer size

#mobility:
  # Set the radius within which the device should download information about field node positions
  #nodeInfoDownloadRadius: 20000
  # Set the distance threshold to the outer edge of the radius which will trigger downloading new node info
  #nodeIndexUpdateThreshold: 5000
  # Set the interval in which the path prediction should be recalculated
  #pathPredictionUpdateInterval: 10
  # Set after how many checks for location changes a new location should be saved to the buffer
  #locationBufferSaveRate: 1
  # Set the length of the path prediction
  #pathPredictionLength: 40000
  # Set the radius in around a field node within which the connection is expected to be reasonably fast
  #defaultCoverageRadius: 5000
  # Set the interval in which location updates should be sent to the coordinator
  #sendLocationUpdateInterval: 1000
  # Set the path to the config file for the location provider
  #locationProviderConfig: "tests/test_data/testLocationsSlow2.csv"
  # Set the type of location provider
  #locationProviderType: "CSV"
